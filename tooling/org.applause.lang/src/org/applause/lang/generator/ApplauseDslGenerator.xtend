/*
 * generated by Xtext
 */
package org.applause.lang.generator

import com.google.inject.Inject
import com.google.inject.Provider
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class ApplauseDslGenerator implements IGenerator {
	
	@Inject
	private Provider<BuildParticipantRegistry> participantRegistry;
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for (participant: participantRegistry.get().buildParticipants) {
			participant.doGenerate(resource, fsa)
		}
		fsa.generateFile('buildparticipants.txt', compileParticipants)
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	}
	
	def compileParticipants() '''
		«FOR participant: participantRegistry.get().buildParticipants»
			Participant: «participant.class.name»
		«ENDFOR»
	'''
	
}
