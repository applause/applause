/*
* generated by Xtext
*/
package org.applause.lang.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ApplauseDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsNamedElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//Model:
		//	elements+=NamedElement*;
		public ParserRule getRule() { return rule; }

		//elements+=NamedElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//NamedElement
		public RuleCall getElementsNamedElementParserRuleCall_0() { return cElementsNamedElementParserRuleCall_0; }
	}

	public class NamedElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPlatformParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDataSourceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cScreenParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUIComponentDeclarationParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cListItemCellDeclarationParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//NamedElement:
		//	Type | Platform | DataSource | Screen | UIComponentDeclaration | ListItemCellDeclaration;
		public ParserRule getRule() { return rule; }

		//Type | Platform | DataSource | Screen | UIComponentDeclaration | ListItemCellDeclaration
		public Alternatives getAlternatives() { return cAlternatives; }

		//Type
		public RuleCall getTypeParserRuleCall_0() { return cTypeParserRuleCall_0; }

		//Platform
		public RuleCall getPlatformParserRuleCall_1() { return cPlatformParserRuleCall_1; }

		//DataSource
		public RuleCall getDataSourceParserRuleCall_2() { return cDataSourceParserRuleCall_2; }

		//Screen
		public RuleCall getScreenParserRuleCall_3() { return cScreenParserRuleCall_3; }

		//UIComponentDeclaration
		public RuleCall getUIComponentDeclarationParserRuleCall_4() { return cUIComponentDeclarationParserRuleCall_4; }

		//ListItemCellDeclaration
		public RuleCall getListItemCellDeclarationParserRuleCall_5() { return cListItemCellDeclarationParserRuleCall_5; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// -----------------------------------------
		//// Entities
		//// -----------------------------------------
		//Type:
		//	DataType | Entity;
		public ParserRule getRule() { return rule; }

		//DataType | Entity
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_0() { return cDataTypeParserRuleCall_0; }

		//Entity
		public RuleCall getEntityParserRuleCall_1() { return cEntityParserRuleCall_1; }
	}

	public class KeywordedIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeywordedID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cTitleKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cPlatformKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cResourceKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cSectionKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cAbstractKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cDeleteKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cAddKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cEditKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cDisplayKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		
		//// HACK as suggested by Jan KÃ¶hnlein in per http://www.eclipse.org/forums/index.php/mv/msg/200409/639873/#msg_639873
		//KeywordedID:
		//	ID | "title" | "platform" | "resource" | "section" | "abstract" | "delete" | "add" | "edit" | // can be removed later when  we remove ActionVerb
		//	"display";
		public ParserRule getRule() { return rule; }

		//ID | "title" | "platform" | "resource" | "section" | "abstract" | "delete" | "add" | "edit" | // can be removed later when  we remove ActionVerb
		//"display"
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//"title"
		public Keyword getTitleKeyword_1() { return cTitleKeyword_1; }

		//"platform"
		public Keyword getPlatformKeyword_2() { return cPlatformKeyword_2; }

		//"resource"
		public Keyword getResourceKeyword_3() { return cResourceKeyword_3; }

		//"section"
		public Keyword getSectionKeyword_4() { return cSectionKeyword_4; }

		//"abstract"
		public Keyword getAbstractKeyword_5() { return cAbstractKeyword_5; }

		//"delete"
		public Keyword getDeleteKeyword_6() { return cDeleteKeyword_6; }

		//"add"
		public Keyword getAddKeyword_7() { return cAddKeyword_7; }

		//"edit"
		public Keyword getEditKeyword_8() { return cEditKeyword_8; }

		//// can be removed later when  we remove ActionVerb
		//"display"
		public Keyword getDisplayKeyword_9() { return cDisplayKeyword_9; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatatypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameKeywordedIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DataType:
		//	"datatype" name=KeywordedID;
		public ParserRule getRule() { return rule; }

		//"datatype" name=KeywordedID
		public Group getGroup() { return cGroup; }

		//"datatype"
		public Keyword getDatatypeKeyword_0() { return cDatatypeKeyword_0; }

		//name=KeywordedID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_1_0() { return cNameKeywordedIDParserRuleCall_1_0; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAbstractAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0 = (Keyword)cAbstractAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuperTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cSuperTypeEntityCrossReference_3_1_0 = (CrossReference)cSuperTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cSuperTypeEntityIDTerminalRuleCall_3_1_0_1 = (RuleCall)cSuperTypeEntityCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAttributesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAttributesAttributeParserRuleCall_5_0 = (RuleCall)cAttributesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Entity:
		//	abstract?="abstract"? "entity" name=ID ("extends" superType=[Entity])? "{" attributes+=Attribute* "}";
		public ParserRule getRule() { return rule; }

		//abstract?="abstract"? "entity" name=ID ("extends" superType=[Entity])? "{" attributes+=Attribute* "}"
		public Group getGroup() { return cGroup; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_0() { return cAbstractAssignment_0; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_0_0() { return cAbstractAbstractKeyword_0_0; }

		//"entity"
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("extends" superType=[Entity])?
		public Group getGroup_3() { return cGroup_3; }

		//"extends"
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//superType=[Entity]
		public Assignment getSuperTypeAssignment_3_1() { return cSuperTypeAssignment_3_1; }

		//[Entity]
		public CrossReference getSuperTypeEntityCrossReference_3_1_0() { return cSuperTypeEntityCrossReference_3_1_0; }

		//ID
		public RuleCall getSuperTypeEntityIDTerminalRuleCall_3_1_0_1() { return cSuperTypeEntityIDTerminalRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//attributes+=Attribute*
		public Assignment getAttributesAssignment_5() { return cAttributesAssignment_5; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_5_0() { return cAttributesAttributeParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cManyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cManyLeftSquareBracketRightSquareBracketKeyword_1_0 = (Keyword)cManyAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameKeywordedIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Attribute:
		//	type=[Type] many?="[]"? name=KeywordedID;
		public ParserRule getRule() { return rule; }

		//type=[Type] many?="[]"? name=KeywordedID
		public Group getGroup() { return cGroup; }

		//type=[Type]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_0_0() { return cTypeTypeCrossReference_0_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_0_0_1() { return cTypeTypeIDTerminalRuleCall_0_0_1; }

		//many?="[]"?
		public Assignment getManyAssignment_1() { return cManyAssignment_1; }

		//"[]"
		public Keyword getManyLeftSquareBracketRightSquareBracketKeyword_1_0() { return cManyLeftSquareBracketRightSquareBracketKeyword_1_0; }

		//name=KeywordedID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_2_0() { return cNameKeywordedIDParserRuleCall_2_0; }
	}

	public class PlatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Platform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlatformKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMappingsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMappingsPlatformMappingParserRuleCall_3_0 = (RuleCall)cMappingsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// -----------------------------------------
		//// Platform-specific mappings
		//// -----------------------------------------
		//Platform:
		//	"platform" name=ID "{" mappings+=PlatformMapping* "}";
		public ParserRule getRule() { return rule; }

		//"platform" name=ID "{" mappings+=PlatformMapping* "}"
		public Group getGroup() { return cGroup; }

		//"platform"
		public Keyword getPlatformKeyword_0() { return cPlatformKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//mappings+=PlatformMapping*
		public Assignment getMappingsAssignment_3() { return cMappingsAssignment_3; }

		//PlatformMapping
		public RuleCall getMappingsPlatformMappingParserRuleCall_3_0() { return cMappingsPlatformMappingParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PlatformMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PlatformMapping");
		private final RuleCall cTypeMappingParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//PlatformMapping: // | NamespaceMapping
		//	TypeMapping;
		public ParserRule getRule() { return rule; }

		//// | NamespaceMapping
		//TypeMapping
		public RuleCall getTypeMappingParserRuleCall() { return cTypeMappingParserRuleCall; }
	}

	public class TypeMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypemappingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeDataTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeDataTypeIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeDataTypeCrossReference_1_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSimpleNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSimpleNameIDTerminalRuleCall_3_0 = (RuleCall)cSimpleNameAssignment_3.eContents().get(0);
		
		//TypeMapping:
		//	"typemapping" type=[DataType] "->" simpleName=ID;
		public ParserRule getRule() { return rule; }

		//"typemapping" type=[DataType] "->" simpleName=ID
		public Group getGroup() { return cGroup; }

		//"typemapping"
		public Keyword getTypemappingKeyword_0() { return cTypemappingKeyword_0; }

		//type=[DataType]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[DataType]
		public CrossReference getTypeDataTypeCrossReference_1_0() { return cTypeDataTypeCrossReference_1_0; }

		//ID
		public RuleCall getTypeDataTypeIDTerminalRuleCall_1_0_1() { return cTypeDataTypeIDTerminalRuleCall_1_0_1; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//simpleName=ID
		public Assignment getSimpleNameAssignment_3() { return cSimpleNameAssignment_3; }

		//ID
		public RuleCall getSimpleNameIDTerminalRuleCall_3_0() { return cSimpleNameIDTerminalRuleCall_3_0; }
	}

	public class DataSourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataSource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDatasourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cBaseUrlKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBaseUrlAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBaseUrlAbsoluteRESTURLParserRuleCall_5_0 = (RuleCall)cBaseUrlAssignment_5.eContents().get(0);
		private final Keyword cResourceKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cResourceTypeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cResourceTypeEntityCrossReference_8_0 = (CrossReference)cResourceTypeAssignment_8.eContents().get(0);
		private final RuleCall cResourceTypeEntityIDTerminalRuleCall_8_0_1 = (RuleCall)cResourceTypeEntityCrossReference_8_0.eContents().get(1);
		private final Assignment cMethodsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMethodsDataSourceAccessMethodParserRuleCall_9_0 = (RuleCall)cMethodsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//// -----------------------------------------
		//// Data Source
		//// -----------------------------------------
		//DataSource:
		//	"datasource" name=ID "{" "baseUrl" ":" baseUrl=AbsoluteRESTURL "resource" ":" resourceType=[Entity]
		//	methods+=DataSourceAccessMethod* "}";
		public ParserRule getRule() { return rule; }

		//"datasource" name=ID "{" "baseUrl" ":" baseUrl=AbsoluteRESTURL "resource" ":" resourceType=[Entity]
		//methods+=DataSourceAccessMethod* "}"
		public Group getGroup() { return cGroup; }

		//"datasource"
		public Keyword getDatasourceKeyword_0() { return cDatasourceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"baseUrl"
		public Keyword getBaseUrlKeyword_3() { return cBaseUrlKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//baseUrl=AbsoluteRESTURL
		public Assignment getBaseUrlAssignment_5() { return cBaseUrlAssignment_5; }

		//AbsoluteRESTURL
		public RuleCall getBaseUrlAbsoluteRESTURLParserRuleCall_5_0() { return cBaseUrlAbsoluteRESTURLParserRuleCall_5_0; }

		//"resource"
		public Keyword getResourceKeyword_6() { return cResourceKeyword_6; }

		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }

		//resourceType=[Entity]
		public Assignment getResourceTypeAssignment_8() { return cResourceTypeAssignment_8; }

		//[Entity]
		public CrossReference getResourceTypeEntityCrossReference_8_0() { return cResourceTypeEntityCrossReference_8_0; }

		//ID
		public RuleCall getResourceTypeEntityIDTerminalRuleCall_8_0_1() { return cResourceTypeEntityIDTerminalRuleCall_8_0_1; }

		//methods+=DataSourceAccessMethod*
		public Assignment getMethodsAssignment_9() { return cMethodsAssignment_9; }

		//DataSourceAccessMethod
		public RuleCall getMethodsDataSourceAccessMethodParserRuleCall_9_0() { return cMethodsDataSourceAccessMethodParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class DataSourceAccessMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataSourceAccessMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameKeywordedIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cDeclaredParametersAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cDeclaredParametersParameterParserRuleCall_2_0_0 = (RuleCall)cDeclaredParametersAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cDeclaredParametersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cDeclaredParametersParameterParserRuleCall_2_1_1_0 = (RuleCall)cDeclaredParametersAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReturnsManyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cReturnsManyLeftSquareBracketRightSquareBracketKeyword_4_0 = (Keyword)cReturnsManyAssignment_4.eContents().get(0);
		private final Assignment cRestSpecificationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRestSpecificationRESTSpecificationParserRuleCall_5_0 = (RuleCall)cRestSpecificationAssignment_5.eContents().get(0);
		
		//// TODO: As we can have multiple datasource for each entity, we should either:
		//// (a) make sure only one datasource cen be defined per dentity
		//// (b) there always is just one data source access method with the same name for any given entity
		//// IMO, (a) seems to be easier  
		//DataSourceAccessMethod:
		//	name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")" returnsMany?="[]"?
		//	restSpecification=RESTSpecification;
		public ParserRule getRule() { return rule; }

		//name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")" returnsMany?="[]"?
		//restSpecification=RESTSpecification
		public Group getGroup() { return cGroup; }

		//name=KeywordedID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_0_0() { return cNameKeywordedIDParserRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)?
		public Group getGroup_2() { return cGroup_2; }

		//declaredParameters+=Parameter
		public Assignment getDeclaredParametersAssignment_2_0() { return cDeclaredParametersAssignment_2_0; }

		//Parameter
		public RuleCall getDeclaredParametersParameterParserRuleCall_2_0_0() { return cDeclaredParametersParameterParserRuleCall_2_0_0; }

		//("," declaredParameters+=Parameter)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//declaredParameters+=Parameter
		public Assignment getDeclaredParametersAssignment_2_1_1() { return cDeclaredParametersAssignment_2_1_1; }

		//Parameter
		public RuleCall getDeclaredParametersParameterParserRuleCall_2_1_1_0() { return cDeclaredParametersParameterParserRuleCall_2_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//returnsMany?="[]"?
		public Assignment getReturnsManyAssignment_4() { return cReturnsManyAssignment_4; }

		//"[]"
		public Keyword getReturnsManyLeftSquareBracketRightSquareBracketKeyword_4_0() { return cReturnsManyLeftSquareBracketRightSquareBracketKeyword_4_0; }

		//restSpecification=RESTSpecification
		public Assignment getRestSpecificationAssignment_5() { return cRestSpecificationAssignment_5; }

		//RESTSpecification
		public RuleCall getRestSpecificationRESTSpecificationParserRuleCall_5_0() { return cRestSpecificationRESTSpecificationParserRuleCall_5_0; }
	}

	public class RESTSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RESTSpecification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVerbAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVerbRESTVerbEnumRuleCall_0_0 = (RuleCall)cVerbAssignment_0.eContents().get(0);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathRESTURLParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBodyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBodyDataSourceBodySpecificationParserRuleCall_2_1_0 = (RuleCall)cBodyAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//RESTSpecification:
		//	verb=RESTVerb path=RESTURL ("{" body=DataSourceBodySpecification "}")?;
		public ParserRule getRule() { return rule; }

		//verb=RESTVerb path=RESTURL ("{" body=DataSourceBodySpecification "}")?
		public Group getGroup() { return cGroup; }

		//verb=RESTVerb
		public Assignment getVerbAssignment_0() { return cVerbAssignment_0; }

		//RESTVerb
		public RuleCall getVerbRESTVerbEnumRuleCall_0_0() { return cVerbRESTVerbEnumRuleCall_0_0; }

		//path=RESTURL
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }

		//RESTURL
		public RuleCall getPathRESTURLParserRuleCall_1_0() { return cPathRESTURLParserRuleCall_1_0; }

		//("{" body=DataSourceBodySpecification "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//body=DataSourceBodySpecification
		public Assignment getBodyAssignment_2_1() { return cBodyAssignment_2_1; }

		//DataSourceBodySpecification
		public RuleCall getBodyDataSourceBodySpecificationParserRuleCall_2_1_0() { return cBodyDataSourceBodySpecificationParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}

	public class DataSourceBodySpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataSourceBodySpecification");
		private final Assignment cBodycontentsAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cBodycontentsParameterCrossReference_0 = (CrossReference)cBodycontentsAssignment.eContents().get(0);
		private final RuleCall cBodycontentsParameterIDTerminalRuleCall_0_1 = (RuleCall)cBodycontentsParameterCrossReference_0.eContents().get(1);
		
		//DataSourceBodySpecification:
		//	bodycontents=[Parameter];
		public ParserRule getRule() { return rule; }

		//bodycontents=[Parameter]
		public Assignment getBodycontentsAssignment() { return cBodycontentsAssignment; }

		//[Parameter]
		public CrossReference getBodycontentsParameterCrossReference_0() { return cBodycontentsParameterCrossReference_0; }

		//ID
		public RuleCall getBodycontentsParameterIDTerminalRuleCall_0_1() { return cBodycontentsParameterIDTerminalRuleCall_0_1; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameKeywordedIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Parameter:
		//	type=[Type] name=KeywordedID;
		public ParserRule getRule() { return rule; }

		//type=[Type] name=KeywordedID
		public Group getGroup() { return cGroup; }

		//type=[Type]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_0_0() { return cTypeTypeCrossReference_0_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_0_0_1() { return cTypeTypeIDTerminalRuleCall_0_0_1; }

		//name=KeywordedID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_1_0() { return cNameKeywordedIDParserRuleCall_1_0; }
	}

	public class RESTURLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RESTURL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbsoluteRESTURLParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelativeRESTURLParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RESTURL:
		//	AbsoluteRESTURL | RelativeRESTURL;
		public ParserRule getRule() { return rule; }

		//AbsoluteRESTURL | RelativeRESTURL
		public Alternatives getAlternatives() { return cAlternatives; }

		//AbsoluteRESTURL
		public RuleCall getAbsoluteRESTURLParserRuleCall_0() { return cAbsoluteRESTURLParserRuleCall_0; }

		//RelativeRESTURL
		public RuleCall getRelativeRESTURLParserRuleCall_1() { return cRelativeRESTURLParserRuleCall_1; }
	}

	public class AbsoluteRESTURLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbsoluteRESTURL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAbsoluteRESTURLAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHttpKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHostAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHostUrlFragmentParserRuleCall_2_0 = (RuleCall)cHostAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPortAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPortINTTerminalRuleCall_3_1_0 = (RuleCall)cPortAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSolidusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFragmentsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFragmentsUrlFragmentParserRuleCall_4_1_0 = (RuleCall)cFragmentsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cQuestionMarkKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParametersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParametersUrlParameterParserRuleCall_5_1_0 = (RuleCall)cParametersAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cAmpersandKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cParametersAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cParametersUrlParameterParserRuleCall_5_2_1_0 = (RuleCall)cParametersAssignment_5_2_1.eContents().get(0);
		
		//AbsoluteRESTURL:
		//	{AbsoluteRESTURL} "http://" host=UrlFragment (":" port=INT)? ("/" fragments+=UrlFragment)* ("?"
		//	parameters+=UrlParameter ("&" parameters+=UrlParameter)*)?;
		public ParserRule getRule() { return rule; }

		//{AbsoluteRESTURL} "http://" host=UrlFragment (":" port=INT)? ("/" fragments+=UrlFragment)* ("?" parameters+=UrlParameter
		//("&" parameters+=UrlParameter)*)?
		public Group getGroup() { return cGroup; }

		//{AbsoluteRESTURL}
		public Action getAbsoluteRESTURLAction_0() { return cAbsoluteRESTURLAction_0; }

		//"http://"
		public Keyword getHttpKeyword_1() { return cHttpKeyword_1; }

		//host=UrlFragment
		public Assignment getHostAssignment_2() { return cHostAssignment_2; }

		//UrlFragment
		public RuleCall getHostUrlFragmentParserRuleCall_2_0() { return cHostUrlFragmentParserRuleCall_2_0; }

		//(":" port=INT)?
		public Group getGroup_3() { return cGroup_3; }

		//":"
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }

		//port=INT
		public Assignment getPortAssignment_3_1() { return cPortAssignment_3_1; }

		//INT
		public RuleCall getPortINTTerminalRuleCall_3_1_0() { return cPortINTTerminalRuleCall_3_1_0; }

		//("/" fragments+=UrlFragment)*
		public Group getGroup_4() { return cGroup_4; }

		//"/"
		public Keyword getSolidusKeyword_4_0() { return cSolidusKeyword_4_0; }

		//fragments+=UrlFragment
		public Assignment getFragmentsAssignment_4_1() { return cFragmentsAssignment_4_1; }

		//UrlFragment
		public RuleCall getFragmentsUrlFragmentParserRuleCall_4_1_0() { return cFragmentsUrlFragmentParserRuleCall_4_1_0; }

		//("?" parameters+=UrlParameter ("&" parameters+=UrlParameter)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"?"
		public Keyword getQuestionMarkKeyword_5_0() { return cQuestionMarkKeyword_5_0; }

		//parameters+=UrlParameter
		public Assignment getParametersAssignment_5_1() { return cParametersAssignment_5_1; }

		//UrlParameter
		public RuleCall getParametersUrlParameterParserRuleCall_5_1_0() { return cParametersUrlParameterParserRuleCall_5_1_0; }

		//("&" parameters+=UrlParameter)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"&"
		public Keyword getAmpersandKeyword_5_2_0() { return cAmpersandKeyword_5_2_0; }

		//parameters+=UrlParameter
		public Assignment getParametersAssignment_5_2_1() { return cParametersAssignment_5_2_1; }

		//UrlParameter
		public RuleCall getParametersUrlParameterParserRuleCall_5_2_1_0() { return cParametersUrlParameterParserRuleCall_5_2_1_0; }
	}

	public class UrlParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameKeywordedIDParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueVariableParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//UrlParameter:
		//	name=KeywordedID "=" value=Variable;
		public ParserRule getRule() { return rule; }

		//name=KeywordedID "=" value=Variable
		public Group getGroup() { return cGroup; }

		//name=KeywordedID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_0_0() { return cNameKeywordedIDParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=Variable
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Variable
		public RuleCall getValueVariableParserRuleCall_2_0() { return cValueVariableParserRuleCall_2_0; }
	}

	public class RelativeRESTURLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RelativeRESTURL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelativeRESTURLAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFragmentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFragmentsUrlFragmentParserRuleCall_2_0 = (RuleCall)cFragmentsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFragmentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cFragmentsUrlFragmentParserRuleCall_3_1_0 = (RuleCall)cFragmentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cQuestionMarkKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParametersUrlParameterParserRuleCall_4_1_0 = (RuleCall)cParametersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cAmpersandKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParametersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParametersUrlParameterParserRuleCall_4_2_1_0 = (RuleCall)cParametersAssignment_4_2_1.eContents().get(0);
		
		//RelativeRESTURL:
		//	{RelativeRESTURL} "/" fragments+=UrlFragment ("/" fragments+=UrlFragment)* ("?" parameters+=UrlParameter ("&"
		//	parameters+=UrlParameter)*)?;
		public ParserRule getRule() { return rule; }

		//{RelativeRESTURL} "/" fragments+=UrlFragment ("/" fragments+=UrlFragment)* ("?" parameters+=UrlParameter ("&"
		//parameters+=UrlParameter)*)?
		public Group getGroup() { return cGroup; }

		//{RelativeRESTURL}
		public Action getRelativeRESTURLAction_0() { return cRelativeRESTURLAction_0; }

		//"/"
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }

		//fragments+=UrlFragment
		public Assignment getFragmentsAssignment_2() { return cFragmentsAssignment_2; }

		//UrlFragment
		public RuleCall getFragmentsUrlFragmentParserRuleCall_2_0() { return cFragmentsUrlFragmentParserRuleCall_2_0; }

		//("/" fragments+=UrlFragment)*
		public Group getGroup_3() { return cGroup_3; }

		//"/"
		public Keyword getSolidusKeyword_3_0() { return cSolidusKeyword_3_0; }

		//fragments+=UrlFragment
		public Assignment getFragmentsAssignment_3_1() { return cFragmentsAssignment_3_1; }

		//UrlFragment
		public RuleCall getFragmentsUrlFragmentParserRuleCall_3_1_0() { return cFragmentsUrlFragmentParserRuleCall_3_1_0; }

		//("?" parameters+=UrlParameter ("&" parameters+=UrlParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"?"
		public Keyword getQuestionMarkKeyword_4_0() { return cQuestionMarkKeyword_4_0; }

		//parameters+=UrlParameter
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//UrlParameter
		public RuleCall getParametersUrlParameterParserRuleCall_4_1_0() { return cParametersUrlParameterParserRuleCall_4_1_0; }

		//("&" parameters+=UrlParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"&"
		public Keyword getAmpersandKeyword_4_2_0() { return cAmpersandKeyword_4_2_0; }

		//parameters+=UrlParameter
		public Assignment getParametersAssignment_4_2_1() { return cParametersAssignment_4_2_1; }

		//UrlParameter
		public RuleCall getParametersUrlParameterParserRuleCall_4_2_1_0() { return cParametersUrlParameterParserRuleCall_4_2_1_0; }
	}

	public class UrlFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlFragment");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUrlPathFragmentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UrlFragment:
		//	UrlPathFragment | Variable;
		public ParserRule getRule() { return rule; }

		//UrlPathFragment | Variable
		public Alternatives getAlternatives() { return cAlternatives; }

		//UrlPathFragment
		public RuleCall getUrlPathFragmentParserRuleCall_0() { return cUrlPathFragmentParserRuleCall_0; }

		//Variable
		public RuleCall getVariableParserRuleCall_1() { return cVariableParserRuleCall_1; }
	}

	public class UrlPathFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UrlPathFragment");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//UrlPathFragment:
		//	name=QualifiedName;
		public ParserRule getRule() { return rule; }

		//name=QualifiedName
		public Assignment getNameAssignment() { return cNameAssignment; }

		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_0() { return cNameQualifiedNameParserRuleCall_0; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParameterReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParameterReferenceParameterMemberCallParserRuleCall_1_0 = (RuleCall)cParameterReferenceAssignment_1.eContents().get(0);
		
		//Variable:
		//	":" parameterReference=ParameterMemberCall;
		public ParserRule getRule() { return rule; }

		//":" parameterReference=ParameterMemberCall
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//parameterReference=ParameterMemberCall
		public Assignment getParameterReferenceAssignment_1() { return cParameterReferenceAssignment_1; }

		//ParameterMemberCall
		public RuleCall getParameterReferenceParameterMemberCallParserRuleCall_1_0() { return cParameterReferenceParameterMemberCallParserRuleCall_1_0; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ScreenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Screen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScreenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cKindAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKindScreenKindEnumRuleCall_1_0 = (RuleCall)cKindAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInputParameterAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInputParameterParameterParserRuleCall_3_1_0 = (RuleCall)cInputParameterAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTitleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTitleAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_5_2_0 = (RuleCall)cTitleAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDatasourceKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDatasourceAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDatasourceDataSourceCallParserRuleCall_6_2_0 = (RuleCall)cDatasourceAssignment_6_2.eContents().get(0);
		private final Keyword cSectionsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSectionsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSectionsScreenSectionParserRuleCall_9_0 = (RuleCall)cSectionsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cActionsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cActionsAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cActionsUIActionParserRuleCall_11_2_0 = (RuleCall)cActionsAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cControllerKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cVerbsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cVerbsControllerVerbParserRuleCall_12_2_0 = (RuleCall)cVerbsAssignment_12_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//// -----------------------------------------
		//// Screens
		//// -----------------------------------------
		//Screen:
		//	"screen" kind=ScreenKind name=ID ("(" inputParameter=Parameter ")")? "{" ("title" "=" title=STRING)? ("datasource" "="
		//	datasource=DataSourceCall)? "sections" "{" sections+=ScreenSection* "}" ("actions" "{" actions+=UIAction* "}")?
		//	("controller" "{" verbs+=ControllerVerb* "}")? "}";
		public ParserRule getRule() { return rule; }

		//"screen" kind=ScreenKind name=ID ("(" inputParameter=Parameter ")")? "{" ("title" "=" title=STRING)? ("datasource" "="
		//datasource=DataSourceCall)? "sections" "{" sections+=ScreenSection* "}" ("actions" "{" actions+=UIAction* "}")?
		//("controller" "{" verbs+=ControllerVerb* "}")? "}"
		public Group getGroup() { return cGroup; }

		//"screen"
		public Keyword getScreenKeyword_0() { return cScreenKeyword_0; }

		//kind=ScreenKind
		public Assignment getKindAssignment_1() { return cKindAssignment_1; }

		//ScreenKind
		public RuleCall getKindScreenKindEnumRuleCall_1_0() { return cKindScreenKindEnumRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" inputParameter=Parameter ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//inputParameter=Parameter
		public Assignment getInputParameterAssignment_3_1() { return cInputParameterAssignment_3_1; }

		//Parameter
		public RuleCall getInputParameterParameterParserRuleCall_3_1_0() { return cInputParameterParameterParserRuleCall_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//("title" "=" title=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"title"
		public Keyword getTitleKeyword_5_0() { return cTitleKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//title=STRING
		public Assignment getTitleAssignment_5_2() { return cTitleAssignment_5_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_5_2_0() { return cTitleSTRINGTerminalRuleCall_5_2_0; }

		//("datasource" "=" datasource=DataSourceCall)?
		public Group getGroup_6() { return cGroup_6; }

		//"datasource"
		public Keyword getDatasourceKeyword_6_0() { return cDatasourceKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//datasource=DataSourceCall
		public Assignment getDatasourceAssignment_6_2() { return cDatasourceAssignment_6_2; }

		//DataSourceCall
		public RuleCall getDatasourceDataSourceCallParserRuleCall_6_2_0() { return cDatasourceDataSourceCallParserRuleCall_6_2_0; }

		//"sections"
		public Keyword getSectionsKeyword_7() { return cSectionsKeyword_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//sections+=ScreenSection*
		public Assignment getSectionsAssignment_9() { return cSectionsAssignment_9; }

		//ScreenSection
		public RuleCall getSectionsScreenSectionParserRuleCall_9_0() { return cSectionsScreenSectionParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//("actions" "{" actions+=UIAction* "}")?
		public Group getGroup_11() { return cGroup_11; }

		//"actions"
		public Keyword getActionsKeyword_11_0() { return cActionsKeyword_11_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//actions+=UIAction*
		public Assignment getActionsAssignment_11_2() { return cActionsAssignment_11_2; }

		//UIAction
		public RuleCall getActionsUIActionParserRuleCall_11_2_0() { return cActionsUIActionParserRuleCall_11_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }

		//("controller" "{" verbs+=ControllerVerb* "}")?
		public Group getGroup_12() { return cGroup_12; }

		//"controller"
		public Keyword getControllerKeyword_12_0() { return cControllerKeyword_12_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }

		//verbs+=ControllerVerb*
		public Assignment getVerbsAssignment_12_2() { return cVerbsAssignment_12_2; }

		//ControllerVerb
		public RuleCall getVerbsControllerVerbParserRuleCall_12_2_0() { return cVerbsControllerVerbParserRuleCall_12_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12_3() { return cRightCurlyBracketKeyword_12_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class ScreenSectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScreenSection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTitleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cTitleAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDatasourceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDatasourceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDatasourceDataSourceCallParserRuleCall_3_2_0 = (RuleCall)cDatasourceAssignment_3_2.eContents().get(0);
		private final Assignment cItemsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cItemsScreenSectionItemsParserRuleCall_4_0 = (RuleCall)cItemsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ScreenSection:
		//	"section" "{" ("title" "=" title=STRING)? ("datasource" "=" datasource=DataSourceCall)? items=ScreenSectionItems "}";
		public ParserRule getRule() { return rule; }

		//"section" "{" ("title" "=" title=STRING)? ("datasource" "=" datasource=DataSourceCall)? items=ScreenSectionItems "}"
		public Group getGroup() { return cGroup; }

		//"section"
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("title" "=" title=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"title"
		public Keyword getTitleKeyword_2_0() { return cTitleKeyword_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }

		//title=STRING
		public Assignment getTitleAssignment_2_2() { return cTitleAssignment_2_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_2_0() { return cTitleSTRINGTerminalRuleCall_2_2_0; }

		//("datasource" "=" datasource=DataSourceCall)?
		public Group getGroup_3() { return cGroup_3; }

		//"datasource"
		public Keyword getDatasourceKeyword_3_0() { return cDatasourceKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//datasource=DataSourceCall
		public Assignment getDatasourceAssignment_3_2() { return cDatasourceAssignment_3_2; }

		//DataSourceCall
		public RuleCall getDatasourceDataSourceCallParserRuleCall_3_2_0() { return cDatasourceDataSourceCallParserRuleCall_3_2_0; }

		//items=ScreenSectionItems
		public Assignment getItemsAssignment_4() { return cItemsAssignment_4; }

		//ScreenSectionItems
		public RuleCall getItemsScreenSectionItemsParserRuleCall_4_0() { return cItemsScreenSectionItemsParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ScreenSectionItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScreenSectionItems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cScreenSectionItemsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cItemsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cItemsScreenListItemCellParserRuleCall_3_0 = (RuleCall)cItemsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ScreenSectionItems:
		//	{ScreenSectionItems} "items" "{" items+=ScreenListItemCell* "}";
		public ParserRule getRule() { return rule; }

		//{ScreenSectionItems} "items" "{" items+=ScreenListItemCell* "}"
		public Group getGroup() { return cGroup; }

		//{ScreenSectionItems}
		public Action getScreenSectionItemsAction_0() { return cScreenSectionItemsAction_0; }

		//"items"
		public Keyword getItemsKeyword_1() { return cItemsKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//items+=ScreenListItemCell*
		public Assignment getItemsAssignment_3() { return cItemsAssignment_3; }

		//ScreenListItemCell
		public RuleCall getItemsScreenListItemCellParserRuleCall_3_0() { return cItemsScreenListItemCellParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ScreenListItemCellElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScreenListItemCell");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCellKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeListItemCellDeclarationCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeListItemCellDeclarationIDTerminalRuleCall_1_0_1 = (RuleCall)cTypeListItemCellDeclarationCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cForeachKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cRestMethodAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRestMethodRESTMethodCallParserRuleCall_2_1_0 = (RuleCall)cRestMethodAssignment_2_1.eContents().get(0);
		private final Keyword cAsKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cVariableAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cVariableLoopVariableParserRuleCall_2_3_0 = (RuleCall)cVariableAssignment_2_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cConfigurationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConfigurationsUIComponentMemberConfigurationParserRuleCall_4_0 = (RuleCall)cConfigurationsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cActionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cActionsUIActionParserRuleCall_5_2_0 = (RuleCall)cActionsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ScreenListItemCell:
		//	"cell" type=[ListItemCellDeclaration] ("foreach" restMethod=RESTMethodCall "as" variable=LoopVariable)? "{"
		//	configurations+=UIComponentMemberConfiguration* ("actions" "{" actions+=UIAction* "}")? "}";
		public ParserRule getRule() { return rule; }

		//"cell" type=[ListItemCellDeclaration] ("foreach" restMethod=RESTMethodCall "as" variable=LoopVariable)? "{"
		//configurations+=UIComponentMemberConfiguration* ("actions" "{" actions+=UIAction* "}")? "}"
		public Group getGroup() { return cGroup; }

		//"cell"
		public Keyword getCellKeyword_0() { return cCellKeyword_0; }

		//type=[ListItemCellDeclaration]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[ListItemCellDeclaration]
		public CrossReference getTypeListItemCellDeclarationCrossReference_1_0() { return cTypeListItemCellDeclarationCrossReference_1_0; }

		//ID
		public RuleCall getTypeListItemCellDeclarationIDTerminalRuleCall_1_0_1() { return cTypeListItemCellDeclarationIDTerminalRuleCall_1_0_1; }

		//("foreach" restMethod=RESTMethodCall "as" variable=LoopVariable)?
		public Group getGroup_2() { return cGroup_2; }

		//"foreach"
		public Keyword getForeachKeyword_2_0() { return cForeachKeyword_2_0; }

		//restMethod=RESTMethodCall
		public Assignment getRestMethodAssignment_2_1() { return cRestMethodAssignment_2_1; }

		//RESTMethodCall
		public RuleCall getRestMethodRESTMethodCallParserRuleCall_2_1_0() { return cRestMethodRESTMethodCallParserRuleCall_2_1_0; }

		//"as"
		public Keyword getAsKeyword_2_2() { return cAsKeyword_2_2; }

		//variable=LoopVariable
		public Assignment getVariableAssignment_2_3() { return cVariableAssignment_2_3; }

		//LoopVariable
		public RuleCall getVariableLoopVariableParserRuleCall_2_3_0() { return cVariableLoopVariableParserRuleCall_2_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//configurations+=UIComponentMemberConfiguration*
		public Assignment getConfigurationsAssignment_4() { return cConfigurationsAssignment_4; }

		//UIComponentMemberConfiguration
		public RuleCall getConfigurationsUIComponentMemberConfigurationParserRuleCall_4_0() { return cConfigurationsUIComponentMemberConfigurationParserRuleCall_4_0; }

		//("actions" "{" actions+=UIAction* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"actions"
		public Keyword getActionsKeyword_5_0() { return cActionsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//actions+=UIAction*
		public Assignment getActionsAssignment_5_2() { return cActionsAssignment_5_2; }

		//UIAction
		public RuleCall getActionsUIActionParserRuleCall_5_2_0() { return cActionsUIActionParserRuleCall_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ReferrableElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferrableElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoopVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ReferrableElement:
		//	Parameter | LoopVariable;
		public ParserRule getRule() { return rule; }

		//Parameter | LoopVariable
		public Alternatives getAlternatives() { return cAlternatives; }

		//Parameter
		public RuleCall getParameterParserRuleCall_0() { return cParameterParserRuleCall_0; }

		//LoopVariable
		public RuleCall getLoopVariableParserRuleCall_1() { return cLoopVariableParserRuleCall_1; }
	}

	public class LoopVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LoopVariable");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//LoopVariable:
		//	name=ID;
		public ParserRule getRule() { return rule; }

		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}

	public class UIActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTitleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTitleSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cTitleAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIconKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIconAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIconSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cIconAssignment_3_2.eContents().get(0);
		private final Keyword cActionKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cActionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cActionUIActionSpecificationParserRuleCall_6_0 = (RuleCall)cActionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cGestureKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cGestureAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cGestureGestureKindEnumRuleCall_7_2_0 = (RuleCall)cGestureAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cOrderKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cEqualsSignKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cOrderAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cOrderINTTerminalRuleCall_8_2_0 = (RuleCall)cOrderAssignment_8_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//UIAction:
		//	"action" "{" ("title" "=" title=STRING)? ("icon" "=" icon=STRING)? "action" "=" action=UIActionSpecification
		//	("gesture" "=" gesture=GestureKind)? ("order" "=" order=INT)? "}";
		public ParserRule getRule() { return rule; }

		//"action" "{" ("title" "=" title=STRING)? ("icon" "=" icon=STRING)? "action" "=" action=UIActionSpecification ("gesture"
		//"=" gesture=GestureKind)? ("order" "=" order=INT)? "}"
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//("title" "=" title=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"title"
		public Keyword getTitleKeyword_2_0() { return cTitleKeyword_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }

		//title=STRING
		public Assignment getTitleAssignment_2_2() { return cTitleAssignment_2_2; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_2_2_0() { return cTitleSTRINGTerminalRuleCall_2_2_0; }

		//("icon" "=" icon=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"icon"
		public Keyword getIconKeyword_3_0() { return cIconKeyword_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1() { return cEqualsSignKeyword_3_1; }

		//icon=STRING
		public Assignment getIconAssignment_3_2() { return cIconAssignment_3_2; }

		//STRING
		public RuleCall getIconSTRINGTerminalRuleCall_3_2_0() { return cIconSTRINGTerminalRuleCall_3_2_0; }

		//"action"
		public Keyword getActionKeyword_4() { return cActionKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//action=UIActionSpecification
		public Assignment getActionAssignment_6() { return cActionAssignment_6; }

		//UIActionSpecification
		public RuleCall getActionUIActionSpecificationParserRuleCall_6_0() { return cActionUIActionSpecificationParserRuleCall_6_0; }

		//("gesture" "=" gesture=GestureKind)?
		public Group getGroup_7() { return cGroup_7; }

		//"gesture"
		public Keyword getGestureKeyword_7_0() { return cGestureKeyword_7_0; }

		//"="
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }

		//gesture=GestureKind
		public Assignment getGestureAssignment_7_2() { return cGestureAssignment_7_2; }

		//GestureKind
		public RuleCall getGestureGestureKindEnumRuleCall_7_2_0() { return cGestureGestureKindEnumRuleCall_7_2_0; }

		//("order" "=" order=INT)?
		public Group getGroup_8() { return cGroup_8; }

		//"order"
		public Keyword getOrderKeyword_8_0() { return cOrderKeyword_8_0; }

		//"="
		public Keyword getEqualsSignKeyword_8_1() { return cEqualsSignKeyword_8_1; }

		//order=INT
		public Assignment getOrderAssignment_8_2() { return cOrderAssignment_8_2; }

		//INT
		public RuleCall getOrderINTTerminalRuleCall_8_2_0() { return cOrderINTTerminalRuleCall_8_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class UIActionSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIActionSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUIActionNavigateActionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUIActionDeleteActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UIActionSpecification:
		//	UIActionNavigateAction | UIActionDeleteAction;
		public ParserRule getRule() { return rule; }

		//UIActionNavigateAction | UIActionDeleteAction
		public Alternatives getAlternatives() { return cAlternatives; }

		//UIActionNavigateAction
		public RuleCall getUIActionNavigateActionParserRuleCall_0() { return cUIActionNavigateActionParserRuleCall_0; }

		//UIActionDeleteAction
		public RuleCall getUIActionDeleteActionParserRuleCall_1() { return cUIActionDeleteActionParserRuleCall_1; }
	}

	public class UIActionNavigateActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIActionNavigateAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUIActionNavigateActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTargetScreenAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTargetScreenScreenCrossReference_1_0 = (CrossReference)cTargetScreenAssignment_1.eContents().get(0);
		private final RuleCall cTargetScreenScreenIDTerminalRuleCall_1_0_1 = (RuleCall)cTargetScreenScreenCrossReference_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionVerbAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cActionVerbControllerVerbCrossReference_3_0 = (CrossReference)cActionVerbAssignment_3.eContents().get(0);
		private final RuleCall cActionVerbControllerVerbKeywordedIDParserRuleCall_3_0_1 = (RuleCall)cActionVerbControllerVerbCrossReference_3_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVariableAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cVariableReferrableElementCrossReference_5_0 = (CrossReference)cVariableAssignment_5.eContents().get(0);
		private final RuleCall cVariableReferrableElementIDTerminalRuleCall_5_0_1 = (RuleCall)cVariableReferrableElementCrossReference_5_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//UIActionNavigateAction:
		//	{UIActionNavigateAction} targetScreen=[Screen] "." actionVerb=[ControllerVerb|KeywordedID] "("
		//	variable=[ReferrableElement]? ")";
		public ParserRule getRule() { return rule; }

		//{UIActionNavigateAction} targetScreen=[Screen] "." actionVerb=[ControllerVerb|KeywordedID] "("
		//variable=[ReferrableElement]? ")"
		public Group getGroup() { return cGroup; }

		//{UIActionNavigateAction}
		public Action getUIActionNavigateActionAction_0() { return cUIActionNavigateActionAction_0; }

		//targetScreen=[Screen]
		public Assignment getTargetScreenAssignment_1() { return cTargetScreenAssignment_1; }

		//[Screen]
		public CrossReference getTargetScreenScreenCrossReference_1_0() { return cTargetScreenScreenCrossReference_1_0; }

		//ID
		public RuleCall getTargetScreenScreenIDTerminalRuleCall_1_0_1() { return cTargetScreenScreenIDTerminalRuleCall_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//actionVerb=[ControllerVerb|KeywordedID]
		public Assignment getActionVerbAssignment_3() { return cActionVerbAssignment_3; }

		//[ControllerVerb|KeywordedID]
		public CrossReference getActionVerbControllerVerbCrossReference_3_0() { return cActionVerbControllerVerbCrossReference_3_0; }

		//KeywordedID
		public RuleCall getActionVerbControllerVerbKeywordedIDParserRuleCall_3_0_1() { return cActionVerbControllerVerbKeywordedIDParserRuleCall_3_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }

		//variable=[ReferrableElement]?
		public Assignment getVariableAssignment_5() { return cVariableAssignment_5; }

		//[ReferrableElement]
		public CrossReference getVariableReferrableElementCrossReference_5_0() { return cVariableReferrableElementCrossReference_5_0; }

		//ID
		public RuleCall getVariableReferrableElementIDTerminalRuleCall_5_0_1() { return cVariableReferrableElementIDTerminalRuleCall_5_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class UIActionDeleteActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIActionDeleteAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUIActionDeleteActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDeleteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//UIActionDeleteAction:
		//	{UIActionDeleteAction} "delete";
		public ParserRule getRule() { return rule; }

		//{UIActionDeleteAction} "delete"
		public Group getGroup() { return cGroup; }

		//{UIActionDeleteAction}
		public Action getUIActionDeleteActionAction_0() { return cUIActionDeleteActionAction_0; }

		//"delete"
		public Keyword getDeleteKeyword_1() { return cDeleteKeyword_1; }
	}

	public class ControllerVerbElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ControllerVerb");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKindAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKindControllerVerbKindEnumRuleCall_0_0 = (RuleCall)cKindAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameKeywordedIDParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cDeclaredParametersAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cDeclaredParametersParameterParserRuleCall_3_0_0 = (RuleCall)cDeclaredParametersAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cDeclaredParametersAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cDeclaredParametersParameterParserRuleCall_3_1_1_0 = (RuleCall)cDeclaredParametersAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRestMethodAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cRestMethodRESTMethodCallParserRuleCall_6_0 = (RuleCall)cRestMethodAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ControllerVerb:
		//	kind=ControllerVerbKind name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")"
		//	"{" restMethod=RESTMethodCall? "}";
		public ParserRule getRule() { return rule; }

		//kind=ControllerVerbKind name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")"
		//"{" restMethod=RESTMethodCall? "}"
		public Group getGroup() { return cGroup; }

		//kind=ControllerVerbKind
		public Assignment getKindAssignment_0() { return cKindAssignment_0; }

		//ControllerVerbKind
		public RuleCall getKindControllerVerbKindEnumRuleCall_0_0() { return cKindControllerVerbKindEnumRuleCall_0_0; }

		//name=KeywordedID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_1_0() { return cNameKeywordedIDParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//declaredParameters+=Parameter
		public Assignment getDeclaredParametersAssignment_3_0() { return cDeclaredParametersAssignment_3_0; }

		//Parameter
		public RuleCall getDeclaredParametersParameterParserRuleCall_3_0_0() { return cDeclaredParametersParameterParserRuleCall_3_0_0; }

		//("," declaredParameters+=Parameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//declaredParameters+=Parameter
		public Assignment getDeclaredParametersAssignment_3_1_1() { return cDeclaredParametersAssignment_3_1_1; }

		//Parameter
		public RuleCall getDeclaredParametersParameterParserRuleCall_3_1_1_0() { return cDeclaredParametersParameterParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//restMethod=RESTMethodCall?
		public Assignment getRestMethodAssignment_6() { return cRestMethodAssignment_6; }

		//RESTMethodCall
		public RuleCall getRestMethodRESTMethodCallParserRuleCall_6_0() { return cRestMethodRESTMethodCallParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class ListItemCellDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListItemCellDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListitemcellKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMembersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMembersUIComponentMemberDeclarationParserRuleCall_3_0 = (RuleCall)cMembersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ListItemCellDeclaration:
		//	"listitemcell" name=ID "{" members+=UIComponentMemberDeclaration* "}";
		public ParserRule getRule() { return rule; }

		//"listitemcell" name=ID "{" members+=UIComponentMemberDeclaration* "}"
		public Group getGroup() { return cGroup; }

		//"listitemcell"
		public Keyword getListitemcellKeyword_0() { return cListitemcellKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//members+=UIComponentMemberDeclaration*
		public Assignment getMembersAssignment_3() { return cMembersAssignment_3; }

		//UIComponentMemberDeclaration
		public RuleCall getMembersUIComponentMemberDeclarationParserRuleCall_3_0() { return cMembersUIComponentMemberDeclarationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class UIComponentDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIComponentDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUicomponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMembersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMembersUIComponentMemberDeclarationParserRuleCall_3_0 = (RuleCall)cMembersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UIComponentDeclaration:
		//	"uicomponent" name=ID "{" members+=UIComponentMemberDeclaration* "}";
		public ParserRule getRule() { return rule; }

		//"uicomponent" name=ID "{" members+=UIComponentMemberDeclaration* "}"
		public Group getGroup() { return cGroup; }

		//"uicomponent"
		public Keyword getUicomponentKeyword_0() { return cUicomponentKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//members+=UIComponentMemberDeclaration*
		public Assignment getMembersAssignment_3() { return cMembersAssignment_3; }

		//UIComponentMemberDeclaration
		public RuleCall getMembersUIComponentMemberDeclarationParserRuleCall_3_0() { return cMembersUIComponentMemberDeclarationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class UIComponentMemberDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIComponentMemberDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeUIComponentOrDataTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeUIComponentOrDataTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeUIComponentOrDataTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//UIComponentMemberDeclaration:
		//	type=[UIComponentOrDataType] name=ID;
		public ParserRule getRule() { return rule; }

		//type=[UIComponentOrDataType] name=ID
		public Group getGroup() { return cGroup; }

		//type=[UIComponentOrDataType]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[UIComponentOrDataType]
		public CrossReference getTypeUIComponentOrDataTypeCrossReference_0_0() { return cTypeUIComponentOrDataTypeCrossReference_0_0; }

		//ID
		public RuleCall getTypeUIComponentOrDataTypeIDTerminalRuleCall_0_0_1() { return cTypeUIComponentOrDataTypeIDTerminalRuleCall_0_0_1; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class UIComponentOrDataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIComponentOrDataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUIComponentDeclarationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UIComponentOrDataType:
		//	UIComponentDeclaration | DataType;
		public ParserRule getRule() { return rule; }

		//UIComponentDeclaration | DataType
		public Alternatives getAlternatives() { return cAlternatives; }

		//UIComponentDeclaration
		public RuleCall getUIComponentDeclarationParserRuleCall_0() { return cUIComponentDeclarationParserRuleCall_0; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_1() { return cDataTypeParserRuleCall_1; }
	}

	public class RESTMethodCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RESTMethodCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDatasourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cDatasourceDataSourceCallCrossReference_0_0 = (CrossReference)cDatasourceAssignment_0.eContents().get(0);
		private final RuleCall cDatasourceDataSourceCallIDTerminalRuleCall_0_0_1 = (RuleCall)cDatasourceDataSourceCallCrossReference_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRestMethodAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cRestMethodDataSourceAccessMethodCrossReference_2_0 = (CrossReference)cRestMethodAssignment_2.eContents().get(0);
		private final RuleCall cRestMethodDataSourceAccessMethodKeywordedIDParserRuleCall_2_0_1 = (RuleCall)cRestMethodDataSourceAccessMethodCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParametersAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParametersParameterCallParserRuleCall_4_0 = (RuleCall)cParametersAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParametersAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParametersParameterCallParserRuleCall_5_1_0 = (RuleCall)cParametersAssignment_5_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RESTMethodCall:
		//	datasource=[DataSourceCall] "." restMethod=[DataSourceAccessMethod|KeywordedID] "(" parameters+=ParameterCall? (","
		//	parameters+=ParameterCall)* ")";
		public ParserRule getRule() { return rule; }

		//datasource=[DataSourceCall] "." restMethod=[DataSourceAccessMethod|KeywordedID] "(" parameters+=ParameterCall? (","
		//parameters+=ParameterCall)* ")"
		public Group getGroup() { return cGroup; }

		//datasource=[DataSourceCall]
		public Assignment getDatasourceAssignment_0() { return cDatasourceAssignment_0; }

		//[DataSourceCall]
		public CrossReference getDatasourceDataSourceCallCrossReference_0_0() { return cDatasourceDataSourceCallCrossReference_0_0; }

		//ID
		public RuleCall getDatasourceDataSourceCallIDTerminalRuleCall_0_0_1() { return cDatasourceDataSourceCallIDTerminalRuleCall_0_0_1; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//restMethod=[DataSourceAccessMethod|KeywordedID]
		public Assignment getRestMethodAssignment_2() { return cRestMethodAssignment_2; }

		//[DataSourceAccessMethod|KeywordedID]
		public CrossReference getRestMethodDataSourceAccessMethodCrossReference_2_0() { return cRestMethodDataSourceAccessMethodCrossReference_2_0; }

		//KeywordedID
		public RuleCall getRestMethodDataSourceAccessMethodKeywordedIDParserRuleCall_2_0_1() { return cRestMethodDataSourceAccessMethodKeywordedIDParserRuleCall_2_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//parameters+=ParameterCall?
		public Assignment getParametersAssignment_4() { return cParametersAssignment_4; }

		//ParameterCall
		public RuleCall getParametersParameterCallParserRuleCall_4_0() { return cParametersParameterCallParserRuleCall_4_0; }

		//("," parameters+=ParameterCall)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//parameters+=ParameterCall
		public Assignment getParametersAssignment_5_1() { return cParametersAssignment_5_1; }

		//ParameterCall
		public RuleCall getParametersParameterCallParserRuleCall_5_1_0() { return cParametersParameterCallParserRuleCall_5_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class DataSourceCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataSourceCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDatasourceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cDatasourceDataSourceCrossReference_0_0 = (CrossReference)cDatasourceAssignment_0.eContents().get(0);
		private final RuleCall cDatasourceDataSourceIDTerminalRuleCall_0_0_1 = (RuleCall)cDatasourceDataSourceCrossReference_0_0.eContents().get(1);
		private final Keyword cAsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameKeywordedIDParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//DataSourceCall:
		//	datasource=[DataSource] "as" name=KeywordedID;
		public ParserRule getRule() { return rule; }

		//datasource=[DataSource] "as" name=KeywordedID
		public Group getGroup() { return cGroup; }

		//datasource=[DataSource]
		public Assignment getDatasourceAssignment_0() { return cDatasourceAssignment_0; }

		//[DataSource]
		public CrossReference getDatasourceDataSourceCrossReference_0_0() { return cDatasourceDataSourceCrossReference_0_0; }

		//ID
		public RuleCall getDatasourceDataSourceIDTerminalRuleCall_0_0_1() { return cDatasourceDataSourceIDTerminalRuleCall_0_0_1; }

		//"as"
		public Keyword getAsKeyword_1() { return cAsKeyword_1; }

		//name=KeywordedID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//KeywordedID
		public RuleCall getNameKeywordedIDParserRuleCall_2_0() { return cNameKeywordedIDParserRuleCall_2_0; }
	}

	public class UIComponentMemberConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIComponentMemberConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeUIComponentMemberCallParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueExpressionParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//UIComponentMemberConfiguration:
		//	type=UIComponentMemberCall "=" value=Expression;
		public ParserRule getRule() { return rule; }

		//type=UIComponentMemberCall "=" value=Expression
		public Group getGroup() { return cGroup; }

		//type=UIComponentMemberCall
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//UIComponentMemberCall
		public RuleCall getTypeUIComponentMemberCallParserRuleCall_0_0() { return cTypeUIComponentMemberCallParserRuleCall_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=Expression
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Expression
		public RuleCall getValueExpressionParserRuleCall_2_0() { return cValueExpressionParserRuleCall_2_0; }
	}

	public class UIComponentMemberCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UIComponentMemberCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cComponentUIComponentMemberDeclarationCrossReference_0_0 = (CrossReference)cComponentAssignment_0.eContents().get(0);
		private final RuleCall cComponentUIComponentMemberDeclarationIDTerminalRuleCall_0_0_1 = (RuleCall)cComponentUIComponentMemberDeclarationCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMemberAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cMemberUIComponentMemberDeclarationCrossReference_1_1_0 = (CrossReference)cMemberAssignment_1_1.eContents().get(0);
		private final RuleCall cMemberUIComponentMemberDeclarationIDTerminalRuleCall_1_1_0_1 = (RuleCall)cMemberUIComponentMemberDeclarationCrossReference_1_1_0.eContents().get(1);
		
		//UIComponentMemberCall:
		//	component=[UIComponentMemberDeclaration] ("." member=[UIComponentMemberDeclaration])?;
		public ParserRule getRule() { return rule; }

		//component=[UIComponentMemberDeclaration] ("." member=[UIComponentMemberDeclaration])?
		public Group getGroup() { return cGroup; }

		//component=[UIComponentMemberDeclaration]
		public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

		//[UIComponentMemberDeclaration]
		public CrossReference getComponentUIComponentMemberDeclarationCrossReference_0_0() { return cComponentUIComponentMemberDeclarationCrossReference_0_0; }

		//ID
		public RuleCall getComponentUIComponentMemberDeclarationIDTerminalRuleCall_0_0_1() { return cComponentUIComponentMemberDeclarationIDTerminalRuleCall_0_0_1; }

		//("." member=[UIComponentMemberDeclaration])?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//member=[UIComponentMemberDeclaration]
		public Assignment getMemberAssignment_1_1() { return cMemberAssignment_1_1; }

		//[UIComponentMemberDeclaration]
		public CrossReference getMemberUIComponentMemberDeclarationCrossReference_1_1_0() { return cMemberUIComponentMemberDeclarationCrossReference_1_1_0; }

		//ID
		public RuleCall getMemberUIComponentMemberDeclarationIDTerminalRuleCall_1_1_0_1() { return cMemberUIComponentMemberDeclarationIDTerminalRuleCall_1_1_0_1; }
	}

	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityMemberCallParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// -----------------------------------------
		//// Expressions
		//// TODO: implement a proper type system
		//// -----------------------------------------
		//Expression:
		//	StringLiteral | EntityMemberCall;
		public ParserRule getRule() { return rule; }

		//StringLiteral | EntityMemberCall
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_0() { return cStringLiteralParserRuleCall_0; }

		//EntityMemberCall
		public RuleCall getEntityMemberCallParserRuleCall_1() { return cEntityMemberCallParserRuleCall_1; }
	}

	public class ParameterCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cHeadAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cHeadParameterCrossReference_1_0 = (CrossReference)cHeadAssignment_1.eContents().get(0);
		private final RuleCall cHeadParameterIDTerminalRuleCall_1_0_1 = (RuleCall)cHeadParameterCrossReference_1_0.eContents().get(1);
		
		//// as outlined here http://christiandietrich.wordpress.com/2013/05/18/xtext-and-dot-expressions/
		//ParameterCall returns ParameterReference:
		//	{ParameterCall} head=[Parameter];
		public ParserRule getRule() { return rule; }

		//{ParameterCall} head=[Parameter]
		public Group getGroup() { return cGroup; }

		//{ParameterCall}
		public Action getParameterCallAction_0() { return cParameterCallAction_0; }

		//head=[Parameter]
		public Assignment getHeadAssignment_1() { return cHeadAssignment_1; }

		//[Parameter]
		public CrossReference getHeadParameterCrossReference_1_0() { return cHeadParameterCrossReference_1_0; }

		//ID
		public RuleCall getHeadParameterIDTerminalRuleCall_1_0_1() { return cHeadParameterIDTerminalRuleCall_1_0_1; }
	}

	public class ParameterMemberCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterMemberCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cParameterCallParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cParameterMemberCallReferenceAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cTailAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final CrossReference cTailAttributeCrossReference_1_2_0 = (CrossReference)cTailAssignment_1_2.eContents().get(0);
		private final RuleCall cTailAttributeIDTerminalRuleCall_1_2_0_1 = (RuleCall)cTailAttributeCrossReference_1_2_0.eContents().get(1);
		
		//ParameterMemberCall returns ParameterReference:
		//	ParameterCall ({ParameterMemberCall.reference=current} "." tail=[Attribute])*;
		public ParserRule getRule() { return rule; }

		//ParameterCall ({ParameterMemberCall.reference=current} "." tail=[Attribute])*
		public Group getGroup() { return cGroup; }

		//ParameterCall
		public RuleCall getParameterCallParserRuleCall_0() { return cParameterCallParserRuleCall_0; }

		//({ParameterMemberCall.reference=current} "." tail=[Attribute])*
		public Group getGroup_1() { return cGroup_1; }

		//{ParameterMemberCall.reference=current}
		public Action getParameterMemberCallReferenceAction_1_0() { return cParameterMemberCallReferenceAction_1_0; }

		//"."
		public Keyword getFullStopKeyword_1_1() { return cFullStopKeyword_1_1; }

		//tail=[Attribute]
		public Assignment getTailAssignment_1_2() { return cTailAssignment_1_2; }

		//[Attribute]
		public CrossReference getTailAttributeCrossReference_1_2_0() { return cTailAttributeCrossReference_1_2_0; }

		//ID
		public RuleCall getTailAttributeIDTerminalRuleCall_1_2_0_1() { return cTailAttributeIDTerminalRuleCall_1_2_0_1; }
	}

	public class EntityMemberCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityMemberCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cHeadAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cHeadAttributeCrossReference_0_0 = (CrossReference)cHeadAssignment_0.eContents().get(0);
		private final RuleCall cHeadAttributeIDTerminalRuleCall_0_0_1 = (RuleCall)cHeadAttributeCrossReference_0_0.eContents().get(1);
		private final Assignment cTailAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTailEntityMemberCallTailParserRuleCall_1_0 = (RuleCall)cTailAssignment_1.eContents().get(0);
		
		//EntityMemberCall:
		//	head=[Attribute] tail=EntityMemberCallTail?;
		public ParserRule getRule() { return rule; }

		//head=[Attribute] tail=EntityMemberCallTail?
		public Group getGroup() { return cGroup; }

		//head=[Attribute]
		public Assignment getHeadAssignment_0() { return cHeadAssignment_0; }

		//[Attribute]
		public CrossReference getHeadAttributeCrossReference_0_0() { return cHeadAttributeCrossReference_0_0; }

		//ID
		public RuleCall getHeadAttributeIDTerminalRuleCall_0_0_1() { return cHeadAttributeIDTerminalRuleCall_0_0_1; }

		//tail=EntityMemberCallTail?
		public Assignment getTailAssignment_1() { return cTailAssignment_1; }

		//EntityMemberCallTail
		public RuleCall getTailEntityMemberCallTailParserRuleCall_1_0() { return cTailEntityMemberCallTailParserRuleCall_1_0; }
	}

	public class EntityMemberCallTailElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityMemberCallTail");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFullStopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cHeadAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cHeadAttributeCrossReference_1_0 = (CrossReference)cHeadAssignment_1.eContents().get(0);
		private final RuleCall cHeadAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cHeadAttributeCrossReference_1_0.eContents().get(1);
		private final Assignment cTailAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTailEntityMemberCallTailParserRuleCall_2_0 = (RuleCall)cTailAssignment_2.eContents().get(0);
		
		//EntityMemberCallTail:
		//	"." head=[Attribute] tail=EntityMemberCallTail?;
		public ParserRule getRule() { return rule; }

		//"." head=[Attribute] tail=EntityMemberCallTail?
		public Group getGroup() { return cGroup; }

		//"."
		public Keyword getFullStopKeyword_0() { return cFullStopKeyword_0; }

		//head=[Attribute]
		public Assignment getHeadAssignment_1() { return cHeadAssignment_1; }

		//[Attribute]
		public CrossReference getHeadAttributeCrossReference_1_0() { return cHeadAttributeCrossReference_1_0; }

		//ID
		public RuleCall getHeadAttributeIDTerminalRuleCall_1_0_1() { return cHeadAttributeIDTerminalRuleCall_1_0_1; }

		//tail=EntityMemberCallTail?
		public Assignment getTailAssignment_2() { return cTailAssignment_2; }

		//EntityMemberCallTail
		public RuleCall getTailEntityMemberCallTailParserRuleCall_2_0() { return cTailEntityMemberCallTailParserRuleCall_2_0; }
	}

	public class AttributeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AttributeReference");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cValueAttributeCrossReference_0 = (CrossReference)cValueAssignment.eContents().get(0);
		private final RuleCall cValueAttributeIDTerminalRuleCall_0_1 = (RuleCall)cValueAttributeCrossReference_0.eContents().get(1);
		
		//AttributeReference:
		//	value=[Attribute];
		public ParserRule getRule() { return rule; }

		//value=[Attribute]
		public Assignment getValueAssignment() { return cValueAssignment; }

		//[Attribute]
		public CrossReference getValueAttributeCrossReference_0() { return cValueAttributeCrossReference_0; }

		//ID
		public RuleCall getValueAttributeIDTerminalRuleCall_0_1() { return cValueAttributeIDTerminalRuleCall_0_1; }
	}

	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringLiteral");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//StringLiteral:
		//	value=STRING;
		public ParserRule getRule() { return rule; }

		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	
	
	public class RESTVerbElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "RESTVerb");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGETGETKeyword_0_0 = (Keyword)cGETEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOSTPOSTKeyword_1_0 = (Keyword)cPOSTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPUTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPUTPUTKeyword_2_0 = (Keyword)cPUTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDELETEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDELETEDELETEKeyword_3_0 = (Keyword)cDELETEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RESTVerb:
		//	GET | POST | PUT | DELETE;
		public EnumRule getRule() { return rule; }

		//GET | POST | PUT | DELETE
		public Alternatives getAlternatives() { return cAlternatives; }

		//GET
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_0() { return cGETEnumLiteralDeclaration_0; }

		//"GET"
		public Keyword getGETGETKeyword_0_0() { return cGETGETKeyword_0_0; }

		//POST
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_1() { return cPOSTEnumLiteralDeclaration_1; }

		//"POST"
		public Keyword getPOSTPOSTKeyword_1_0() { return cPOSTPOSTKeyword_1_0; }

		//PUT
		public EnumLiteralDeclaration getPUTEnumLiteralDeclaration_2() { return cPUTEnumLiteralDeclaration_2; }

		//"PUT"
		public Keyword getPUTPUTKeyword_2_0() { return cPUTPUTKeyword_2_0; }

		//DELETE
		public EnumLiteralDeclaration getDELETEEnumLiteralDeclaration_3() { return cDELETEEnumLiteralDeclaration_3; }

		//"DELETE"
		public Keyword getDELETEDELETEKeyword_3_0() { return cDELETEDELETEKeyword_3_0; }
	}

	public class ScreenKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ScreenKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDefaultListEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDefaultListDefaultListKeyword_0_0 = (Keyword)cDefaultListEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDefaultDetailsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDefaultDetailsDefaultDetailsKeyword_1_0 = (Keyword)cDefaultDetailsEnumLiteralDeclaration_1.eContents().get(0);
		
		//// TODO: this should later use a reflective approach just like we use for cells
		//enum ScreenKind:
		//	DefaultList | DefaultDetails;
		public EnumRule getRule() { return rule; }

		//DefaultList | DefaultDetails
		public Alternatives getAlternatives() { return cAlternatives; }

		//DefaultList
		public EnumLiteralDeclaration getDefaultListEnumLiteralDeclaration_0() { return cDefaultListEnumLiteralDeclaration_0; }

		//"DefaultList"
		public Keyword getDefaultListDefaultListKeyword_0_0() { return cDefaultListDefaultListKeyword_0_0; }

		//DefaultDetails
		public EnumLiteralDeclaration getDefaultDetailsEnumLiteralDeclaration_1() { return cDefaultDetailsEnumLiteralDeclaration_1; }

		//"DefaultDetails"
		public Keyword getDefaultDetailsDefaultDetailsKeyword_1_0() { return cDefaultDetailsDefaultDetailsKeyword_1_0; }
	}

	public class GestureKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "GestureKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTapEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTapTapKeyword_0_0 = (Keyword)cTapEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSwipeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSwipeSwipeKeyword_1_0 = (Keyword)cSwipeEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLongpressEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLongpressLongpressKeyword_2_0 = (Keyword)cLongpressEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum GestureKind:
		//	tap | swipe | longpress;
		public EnumRule getRule() { return rule; }

		//tap | swipe | longpress
		public Alternatives getAlternatives() { return cAlternatives; }

		//tap
		public EnumLiteralDeclaration getTapEnumLiteralDeclaration_0() { return cTapEnumLiteralDeclaration_0; }

		//"tap"
		public Keyword getTapTapKeyword_0_0() { return cTapTapKeyword_0_0; }

		//swipe
		public EnumLiteralDeclaration getSwipeEnumLiteralDeclaration_1() { return cSwipeEnumLiteralDeclaration_1; }

		//"swipe"
		public Keyword getSwipeSwipeKeyword_1_0() { return cSwipeSwipeKeyword_1_0; }

		//longpress
		public EnumLiteralDeclaration getLongpressEnumLiteralDeclaration_2() { return cLongpressEnumLiteralDeclaration_2; }

		//"longpress"
		public Keyword getLongpressLongpressKeyword_2_0() { return cLongpressLongpressKeyword_2_0; }
	}

	public class ControllerVerbKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ControllerVerbKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAddAddKeyword_0_0 = (Keyword)cAddEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEditEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEditEditKeyword_1_0 = (Keyword)cEditEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDisplayEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDisplayDisplayKeyword_2_0 = (Keyword)cDisplayEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDeleteEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDeleteDeleteKeyword_3_0 = (Keyword)cDeleteEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum ControllerVerbKind:
		//	add | edit | display | delete;
		public EnumRule getRule() { return rule; }

		//add | edit | display | delete
		public Alternatives getAlternatives() { return cAlternatives; }

		//add
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration_0() { return cAddEnumLiteralDeclaration_0; }

		//"add"
		public Keyword getAddAddKeyword_0_0() { return cAddAddKeyword_0_0; }

		//edit
		public EnumLiteralDeclaration getEditEnumLiteralDeclaration_1() { return cEditEnumLiteralDeclaration_1; }

		//"edit"
		public Keyword getEditEditKeyword_1_0() { return cEditEditKeyword_1_0; }

		//display
		public EnumLiteralDeclaration getDisplayEnumLiteralDeclaration_2() { return cDisplayEnumLiteralDeclaration_2; }

		//"display"
		public Keyword getDisplayDisplayKeyword_2_0() { return cDisplayDisplayKeyword_2_0; }

		//delete
		public EnumLiteralDeclaration getDeleteEnumLiteralDeclaration_3() { return cDeleteEnumLiteralDeclaration_3; }

		//"delete"
		public Keyword getDeleteDeleteKeyword_3_0() { return cDeleteDeleteKeyword_3_0; }
	}
	
	private ModelElements pModel;
	private NamedElementElements pNamedElement;
	private TypeElements pType;
	private KeywordedIDElements pKeywordedID;
	private DataTypeElements pDataType;
	private EntityElements pEntity;
	private AttributeElements pAttribute;
	private PlatformElements pPlatform;
	private PlatformMappingElements pPlatformMapping;
	private TypeMappingElements pTypeMapping;
	private DataSourceElements pDataSource;
	private DataSourceAccessMethodElements pDataSourceAccessMethod;
	private RESTSpecificationElements pRESTSpecification;
	private DataSourceBodySpecificationElements pDataSourceBodySpecification;
	private RESTVerbElements unknownRuleRESTVerb;
	private ParameterElements pParameter;
	private RESTURLElements pRESTURL;
	private AbsoluteRESTURLElements pAbsoluteRESTURL;
	private UrlParameterElements pUrlParameter;
	private RelativeRESTURLElements pRelativeRESTURL;
	private UrlFragmentElements pUrlFragment;
	private UrlPathFragmentElements pUrlPathFragment;
	private VariableElements pVariable;
	private QualifiedNameElements pQualifiedName;
	private ScreenElements pScreen;
	private ScreenKindElements unknownRuleScreenKind;
	private ScreenSectionElements pScreenSection;
	private ScreenSectionItemsElements pScreenSectionItems;
	private ScreenListItemCellElements pScreenListItemCell;
	private ReferrableElementElements pReferrableElement;
	private LoopVariableElements pLoopVariable;
	private UIActionElements pUIAction;
	private GestureKindElements unknownRuleGestureKind;
	private UIActionSpecificationElements pUIActionSpecification;
	private UIActionNavigateActionElements pUIActionNavigateAction;
	private UIActionDeleteActionElements pUIActionDeleteAction;
	private ControllerVerbElements pControllerVerb;
	private ControllerVerbKindElements unknownRuleControllerVerbKind;
	private ListItemCellDeclarationElements pListItemCellDeclaration;
	private UIComponentDeclarationElements pUIComponentDeclaration;
	private UIComponentMemberDeclarationElements pUIComponentMemberDeclaration;
	private UIComponentOrDataTypeElements pUIComponentOrDataType;
	private RESTMethodCallElements pRESTMethodCall;
	private DataSourceCallElements pDataSourceCall;
	private UIComponentMemberConfigurationElements pUIComponentMemberConfiguration;
	private UIComponentMemberCallElements pUIComponentMemberCall;
	private ExpressionElements pExpression;
	private ParameterCallElements pParameterCall;
	private ParameterMemberCallElements pParameterMemberCall;
	private EntityMemberCallElements pEntityMemberCall;
	private EntityMemberCallTailElements pEntityMemberCallTail;
	private AttributeReferenceElements pAttributeReference;
	private StringLiteralElements pStringLiteral;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ApplauseDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.applause.lang.ApplauseDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	elements+=NamedElement*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//NamedElement:
	//	Type | Platform | DataSource | Screen | UIComponentDeclaration | ListItemCellDeclaration;
	public NamedElementElements getNamedElementAccess() {
		return (pNamedElement != null) ? pNamedElement : (pNamedElement = new NamedElementElements());
	}
	
	public ParserRule getNamedElementRule() {
		return getNamedElementAccess().getRule();
	}

	//// -----------------------------------------
	//// Entities
	//// -----------------------------------------
	//Type:
	//	DataType | Entity;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//// HACK as suggested by Jan KÃ¶hnlein in per http://www.eclipse.org/forums/index.php/mv/msg/200409/639873/#msg_639873
	//KeywordedID:
	//	ID | "title" | "platform" | "resource" | "section" | "abstract" | "delete" | "add" | "edit" | // can be removed later when  we remove ActionVerb
	//	"display";
	public KeywordedIDElements getKeywordedIDAccess() {
		return (pKeywordedID != null) ? pKeywordedID : (pKeywordedID = new KeywordedIDElements());
	}
	
	public ParserRule getKeywordedIDRule() {
		return getKeywordedIDAccess().getRule();
	}

	//DataType:
	//	"datatype" name=KeywordedID;
	public DataTypeElements getDataTypeAccess() {
		return (pDataType != null) ? pDataType : (pDataType = new DataTypeElements());
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//Entity:
	//	abstract?="abstract"? "entity" name=ID ("extends" superType=[Entity])? "{" attributes+=Attribute* "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Attribute:
	//	type=[Type] many?="[]"? name=KeywordedID;
	public AttributeElements getAttributeAccess() {
		return (pAttribute != null) ? pAttribute : (pAttribute = new AttributeElements());
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//// -----------------------------------------
	//// Platform-specific mappings
	//// -----------------------------------------
	//Platform:
	//	"platform" name=ID "{" mappings+=PlatformMapping* "}";
	public PlatformElements getPlatformAccess() {
		return (pPlatform != null) ? pPlatform : (pPlatform = new PlatformElements());
	}
	
	public ParserRule getPlatformRule() {
		return getPlatformAccess().getRule();
	}

	//PlatformMapping: // | NamespaceMapping
	//	TypeMapping;
	public PlatformMappingElements getPlatformMappingAccess() {
		return (pPlatformMapping != null) ? pPlatformMapping : (pPlatformMapping = new PlatformMappingElements());
	}
	
	public ParserRule getPlatformMappingRule() {
		return getPlatformMappingAccess().getRule();
	}

	//TypeMapping:
	//	"typemapping" type=[DataType] "->" simpleName=ID;
	public TypeMappingElements getTypeMappingAccess() {
		return (pTypeMapping != null) ? pTypeMapping : (pTypeMapping = new TypeMappingElements());
	}
	
	public ParserRule getTypeMappingRule() {
		return getTypeMappingAccess().getRule();
	}

	//// -----------------------------------------
	//// Data Source
	//// -----------------------------------------
	//DataSource:
	//	"datasource" name=ID "{" "baseUrl" ":" baseUrl=AbsoluteRESTURL "resource" ":" resourceType=[Entity]
	//	methods+=DataSourceAccessMethod* "}";
	public DataSourceElements getDataSourceAccess() {
		return (pDataSource != null) ? pDataSource : (pDataSource = new DataSourceElements());
	}
	
	public ParserRule getDataSourceRule() {
		return getDataSourceAccess().getRule();
	}

	//// TODO: As we can have multiple datasource for each entity, we should either:
	//// (a) make sure only one datasource cen be defined per dentity
	//// (b) there always is just one data source access method with the same name for any given entity
	//// IMO, (a) seems to be easier  
	//DataSourceAccessMethod:
	//	name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")" returnsMany?="[]"?
	//	restSpecification=RESTSpecification;
	public DataSourceAccessMethodElements getDataSourceAccessMethodAccess() {
		return (pDataSourceAccessMethod != null) ? pDataSourceAccessMethod : (pDataSourceAccessMethod = new DataSourceAccessMethodElements());
	}
	
	public ParserRule getDataSourceAccessMethodRule() {
		return getDataSourceAccessMethodAccess().getRule();
	}

	//RESTSpecification:
	//	verb=RESTVerb path=RESTURL ("{" body=DataSourceBodySpecification "}")?;
	public RESTSpecificationElements getRESTSpecificationAccess() {
		return (pRESTSpecification != null) ? pRESTSpecification : (pRESTSpecification = new RESTSpecificationElements());
	}
	
	public ParserRule getRESTSpecificationRule() {
		return getRESTSpecificationAccess().getRule();
	}

	//DataSourceBodySpecification:
	//	bodycontents=[Parameter];
	public DataSourceBodySpecificationElements getDataSourceBodySpecificationAccess() {
		return (pDataSourceBodySpecification != null) ? pDataSourceBodySpecification : (pDataSourceBodySpecification = new DataSourceBodySpecificationElements());
	}
	
	public ParserRule getDataSourceBodySpecificationRule() {
		return getDataSourceBodySpecificationAccess().getRule();
	}

	//enum RESTVerb:
	//	GET | POST | PUT | DELETE;
	public RESTVerbElements getRESTVerbAccess() {
		return (unknownRuleRESTVerb != null) ? unknownRuleRESTVerb : (unknownRuleRESTVerb = new RESTVerbElements());
	}
	
	public EnumRule getRESTVerbRule() {
		return getRESTVerbAccess().getRule();
	}

	//Parameter:
	//	type=[Type] name=KeywordedID;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//RESTURL:
	//	AbsoluteRESTURL | RelativeRESTURL;
	public RESTURLElements getRESTURLAccess() {
		return (pRESTURL != null) ? pRESTURL : (pRESTURL = new RESTURLElements());
	}
	
	public ParserRule getRESTURLRule() {
		return getRESTURLAccess().getRule();
	}

	//AbsoluteRESTURL:
	//	{AbsoluteRESTURL} "http://" host=UrlFragment (":" port=INT)? ("/" fragments+=UrlFragment)* ("?"
	//	parameters+=UrlParameter ("&" parameters+=UrlParameter)*)?;
	public AbsoluteRESTURLElements getAbsoluteRESTURLAccess() {
		return (pAbsoluteRESTURL != null) ? pAbsoluteRESTURL : (pAbsoluteRESTURL = new AbsoluteRESTURLElements());
	}
	
	public ParserRule getAbsoluteRESTURLRule() {
		return getAbsoluteRESTURLAccess().getRule();
	}

	//UrlParameter:
	//	name=KeywordedID "=" value=Variable;
	public UrlParameterElements getUrlParameterAccess() {
		return (pUrlParameter != null) ? pUrlParameter : (pUrlParameter = new UrlParameterElements());
	}
	
	public ParserRule getUrlParameterRule() {
		return getUrlParameterAccess().getRule();
	}

	//RelativeRESTURL:
	//	{RelativeRESTURL} "/" fragments+=UrlFragment ("/" fragments+=UrlFragment)* ("?" parameters+=UrlParameter ("&"
	//	parameters+=UrlParameter)*)?;
	public RelativeRESTURLElements getRelativeRESTURLAccess() {
		return (pRelativeRESTURL != null) ? pRelativeRESTURL : (pRelativeRESTURL = new RelativeRESTURLElements());
	}
	
	public ParserRule getRelativeRESTURLRule() {
		return getRelativeRESTURLAccess().getRule();
	}

	//UrlFragment:
	//	UrlPathFragment | Variable;
	public UrlFragmentElements getUrlFragmentAccess() {
		return (pUrlFragment != null) ? pUrlFragment : (pUrlFragment = new UrlFragmentElements());
	}
	
	public ParserRule getUrlFragmentRule() {
		return getUrlFragmentAccess().getRule();
	}

	//UrlPathFragment:
	//	name=QualifiedName;
	public UrlPathFragmentElements getUrlPathFragmentAccess() {
		return (pUrlPathFragment != null) ? pUrlPathFragment : (pUrlPathFragment = new UrlPathFragmentElements());
	}
	
	public ParserRule getUrlPathFragmentRule() {
		return getUrlPathFragmentAccess().getRule();
	}

	//Variable:
	//	":" parameterReference=ParameterMemberCall;
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//QualifiedName:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//// -----------------------------------------
	//// Screens
	//// -----------------------------------------
	//Screen:
	//	"screen" kind=ScreenKind name=ID ("(" inputParameter=Parameter ")")? "{" ("title" "=" title=STRING)? ("datasource" "="
	//	datasource=DataSourceCall)? "sections" "{" sections+=ScreenSection* "}" ("actions" "{" actions+=UIAction* "}")?
	//	("controller" "{" verbs+=ControllerVerb* "}")? "}";
	public ScreenElements getScreenAccess() {
		return (pScreen != null) ? pScreen : (pScreen = new ScreenElements());
	}
	
	public ParserRule getScreenRule() {
		return getScreenAccess().getRule();
	}

	//// TODO: this should later use a reflective approach just like we use for cells
	//enum ScreenKind:
	//	DefaultList | DefaultDetails;
	public ScreenKindElements getScreenKindAccess() {
		return (unknownRuleScreenKind != null) ? unknownRuleScreenKind : (unknownRuleScreenKind = new ScreenKindElements());
	}
	
	public EnumRule getScreenKindRule() {
		return getScreenKindAccess().getRule();
	}

	//ScreenSection:
	//	"section" "{" ("title" "=" title=STRING)? ("datasource" "=" datasource=DataSourceCall)? items=ScreenSectionItems "}";
	public ScreenSectionElements getScreenSectionAccess() {
		return (pScreenSection != null) ? pScreenSection : (pScreenSection = new ScreenSectionElements());
	}
	
	public ParserRule getScreenSectionRule() {
		return getScreenSectionAccess().getRule();
	}

	//ScreenSectionItems:
	//	{ScreenSectionItems} "items" "{" items+=ScreenListItemCell* "}";
	public ScreenSectionItemsElements getScreenSectionItemsAccess() {
		return (pScreenSectionItems != null) ? pScreenSectionItems : (pScreenSectionItems = new ScreenSectionItemsElements());
	}
	
	public ParserRule getScreenSectionItemsRule() {
		return getScreenSectionItemsAccess().getRule();
	}

	//ScreenListItemCell:
	//	"cell" type=[ListItemCellDeclaration] ("foreach" restMethod=RESTMethodCall "as" variable=LoopVariable)? "{"
	//	configurations+=UIComponentMemberConfiguration* ("actions" "{" actions+=UIAction* "}")? "}";
	public ScreenListItemCellElements getScreenListItemCellAccess() {
		return (pScreenListItemCell != null) ? pScreenListItemCell : (pScreenListItemCell = new ScreenListItemCellElements());
	}
	
	public ParserRule getScreenListItemCellRule() {
		return getScreenListItemCellAccess().getRule();
	}

	//ReferrableElement:
	//	Parameter | LoopVariable;
	public ReferrableElementElements getReferrableElementAccess() {
		return (pReferrableElement != null) ? pReferrableElement : (pReferrableElement = new ReferrableElementElements());
	}
	
	public ParserRule getReferrableElementRule() {
		return getReferrableElementAccess().getRule();
	}

	//LoopVariable:
	//	name=ID;
	public LoopVariableElements getLoopVariableAccess() {
		return (pLoopVariable != null) ? pLoopVariable : (pLoopVariable = new LoopVariableElements());
	}
	
	public ParserRule getLoopVariableRule() {
		return getLoopVariableAccess().getRule();
	}

	//UIAction:
	//	"action" "{" ("title" "=" title=STRING)? ("icon" "=" icon=STRING)? "action" "=" action=UIActionSpecification
	//	("gesture" "=" gesture=GestureKind)? ("order" "=" order=INT)? "}";
	public UIActionElements getUIActionAccess() {
		return (pUIAction != null) ? pUIAction : (pUIAction = new UIActionElements());
	}
	
	public ParserRule getUIActionRule() {
		return getUIActionAccess().getRule();
	}

	//enum GestureKind:
	//	tap | swipe | longpress;
	public GestureKindElements getGestureKindAccess() {
		return (unknownRuleGestureKind != null) ? unknownRuleGestureKind : (unknownRuleGestureKind = new GestureKindElements());
	}
	
	public EnumRule getGestureKindRule() {
		return getGestureKindAccess().getRule();
	}

	//UIActionSpecification:
	//	UIActionNavigateAction | UIActionDeleteAction;
	public UIActionSpecificationElements getUIActionSpecificationAccess() {
		return (pUIActionSpecification != null) ? pUIActionSpecification : (pUIActionSpecification = new UIActionSpecificationElements());
	}
	
	public ParserRule getUIActionSpecificationRule() {
		return getUIActionSpecificationAccess().getRule();
	}

	//UIActionNavigateAction:
	//	{UIActionNavigateAction} targetScreen=[Screen] "." actionVerb=[ControllerVerb|KeywordedID] "("
	//	variable=[ReferrableElement]? ")";
	public UIActionNavigateActionElements getUIActionNavigateActionAccess() {
		return (pUIActionNavigateAction != null) ? pUIActionNavigateAction : (pUIActionNavigateAction = new UIActionNavigateActionElements());
	}
	
	public ParserRule getUIActionNavigateActionRule() {
		return getUIActionNavigateActionAccess().getRule();
	}

	//UIActionDeleteAction:
	//	{UIActionDeleteAction} "delete";
	public UIActionDeleteActionElements getUIActionDeleteActionAccess() {
		return (pUIActionDeleteAction != null) ? pUIActionDeleteAction : (pUIActionDeleteAction = new UIActionDeleteActionElements());
	}
	
	public ParserRule getUIActionDeleteActionRule() {
		return getUIActionDeleteActionAccess().getRule();
	}

	//ControllerVerb:
	//	kind=ControllerVerbKind name=KeywordedID "(" (declaredParameters+=Parameter ("," declaredParameters+=Parameter)*)? ")"
	//	"{" restMethod=RESTMethodCall? "}";
	public ControllerVerbElements getControllerVerbAccess() {
		return (pControllerVerb != null) ? pControllerVerb : (pControllerVerb = new ControllerVerbElements());
	}
	
	public ParserRule getControllerVerbRule() {
		return getControllerVerbAccess().getRule();
	}

	//enum ControllerVerbKind:
	//	add | edit | display | delete;
	public ControllerVerbKindElements getControllerVerbKindAccess() {
		return (unknownRuleControllerVerbKind != null) ? unknownRuleControllerVerbKind : (unknownRuleControllerVerbKind = new ControllerVerbKindElements());
	}
	
	public EnumRule getControllerVerbKindRule() {
		return getControllerVerbKindAccess().getRule();
	}

	//ListItemCellDeclaration:
	//	"listitemcell" name=ID "{" members+=UIComponentMemberDeclaration* "}";
	public ListItemCellDeclarationElements getListItemCellDeclarationAccess() {
		return (pListItemCellDeclaration != null) ? pListItemCellDeclaration : (pListItemCellDeclaration = new ListItemCellDeclarationElements());
	}
	
	public ParserRule getListItemCellDeclarationRule() {
		return getListItemCellDeclarationAccess().getRule();
	}

	//UIComponentDeclaration:
	//	"uicomponent" name=ID "{" members+=UIComponentMemberDeclaration* "}";
	public UIComponentDeclarationElements getUIComponentDeclarationAccess() {
		return (pUIComponentDeclaration != null) ? pUIComponentDeclaration : (pUIComponentDeclaration = new UIComponentDeclarationElements());
	}
	
	public ParserRule getUIComponentDeclarationRule() {
		return getUIComponentDeclarationAccess().getRule();
	}

	//UIComponentMemberDeclaration:
	//	type=[UIComponentOrDataType] name=ID;
	public UIComponentMemberDeclarationElements getUIComponentMemberDeclarationAccess() {
		return (pUIComponentMemberDeclaration != null) ? pUIComponentMemberDeclaration : (pUIComponentMemberDeclaration = new UIComponentMemberDeclarationElements());
	}
	
	public ParserRule getUIComponentMemberDeclarationRule() {
		return getUIComponentMemberDeclarationAccess().getRule();
	}

	//UIComponentOrDataType:
	//	UIComponentDeclaration | DataType;
	public UIComponentOrDataTypeElements getUIComponentOrDataTypeAccess() {
		return (pUIComponentOrDataType != null) ? pUIComponentOrDataType : (pUIComponentOrDataType = new UIComponentOrDataTypeElements());
	}
	
	public ParserRule getUIComponentOrDataTypeRule() {
		return getUIComponentOrDataTypeAccess().getRule();
	}

	//RESTMethodCall:
	//	datasource=[DataSourceCall] "." restMethod=[DataSourceAccessMethod|KeywordedID] "(" parameters+=ParameterCall? (","
	//	parameters+=ParameterCall)* ")";
	public RESTMethodCallElements getRESTMethodCallAccess() {
		return (pRESTMethodCall != null) ? pRESTMethodCall : (pRESTMethodCall = new RESTMethodCallElements());
	}
	
	public ParserRule getRESTMethodCallRule() {
		return getRESTMethodCallAccess().getRule();
	}

	//DataSourceCall:
	//	datasource=[DataSource] "as" name=KeywordedID;
	public DataSourceCallElements getDataSourceCallAccess() {
		return (pDataSourceCall != null) ? pDataSourceCall : (pDataSourceCall = new DataSourceCallElements());
	}
	
	public ParserRule getDataSourceCallRule() {
		return getDataSourceCallAccess().getRule();
	}

	//UIComponentMemberConfiguration:
	//	type=UIComponentMemberCall "=" value=Expression;
	public UIComponentMemberConfigurationElements getUIComponentMemberConfigurationAccess() {
		return (pUIComponentMemberConfiguration != null) ? pUIComponentMemberConfiguration : (pUIComponentMemberConfiguration = new UIComponentMemberConfigurationElements());
	}
	
	public ParserRule getUIComponentMemberConfigurationRule() {
		return getUIComponentMemberConfigurationAccess().getRule();
	}

	//UIComponentMemberCall:
	//	component=[UIComponentMemberDeclaration] ("." member=[UIComponentMemberDeclaration])?;
	public UIComponentMemberCallElements getUIComponentMemberCallAccess() {
		return (pUIComponentMemberCall != null) ? pUIComponentMemberCall : (pUIComponentMemberCall = new UIComponentMemberCallElements());
	}
	
	public ParserRule getUIComponentMemberCallRule() {
		return getUIComponentMemberCallAccess().getRule();
	}

	//// -----------------------------------------
	//// Expressions
	//// TODO: implement a proper type system
	//// -----------------------------------------
	//Expression:
	//	StringLiteral | EntityMemberCall;
	public ExpressionElements getExpressionAccess() {
		return (pExpression != null) ? pExpression : (pExpression = new ExpressionElements());
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	//// as outlined here http://christiandietrich.wordpress.com/2013/05/18/xtext-and-dot-expressions/
	//ParameterCall returns ParameterReference:
	//	{ParameterCall} head=[Parameter];
	public ParameterCallElements getParameterCallAccess() {
		return (pParameterCall != null) ? pParameterCall : (pParameterCall = new ParameterCallElements());
	}
	
	public ParserRule getParameterCallRule() {
		return getParameterCallAccess().getRule();
	}

	//ParameterMemberCall returns ParameterReference:
	//	ParameterCall ({ParameterMemberCall.reference=current} "." tail=[Attribute])*;
	public ParameterMemberCallElements getParameterMemberCallAccess() {
		return (pParameterMemberCall != null) ? pParameterMemberCall : (pParameterMemberCall = new ParameterMemberCallElements());
	}
	
	public ParserRule getParameterMemberCallRule() {
		return getParameterMemberCallAccess().getRule();
	}

	//EntityMemberCall:
	//	head=[Attribute] tail=EntityMemberCallTail?;
	public EntityMemberCallElements getEntityMemberCallAccess() {
		return (pEntityMemberCall != null) ? pEntityMemberCall : (pEntityMemberCall = new EntityMemberCallElements());
	}
	
	public ParserRule getEntityMemberCallRule() {
		return getEntityMemberCallAccess().getRule();
	}

	//EntityMemberCallTail:
	//	"." head=[Attribute] tail=EntityMemberCallTail?;
	public EntityMemberCallTailElements getEntityMemberCallTailAccess() {
		return (pEntityMemberCallTail != null) ? pEntityMemberCallTail : (pEntityMemberCallTail = new EntityMemberCallTailElements());
	}
	
	public ParserRule getEntityMemberCallTailRule() {
		return getEntityMemberCallTailAccess().getRule();
	}

	//AttributeReference:
	//	value=[Attribute];
	public AttributeReferenceElements getAttributeReferenceAccess() {
		return (pAttributeReference != null) ? pAttributeReference : (pAttributeReference = new AttributeReferenceElements());
	}
	
	public ParserRule getAttributeReferenceRule() {
		return getAttributeReferenceAccess().getRule();
	}

	//StringLiteral:
	//	value=STRING;
	public StringLiteralElements getStringLiteralAccess() {
		return (pStringLiteral != null) ? pStringLiteral : (pStringLiteral = new StringLiteralElements());
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
